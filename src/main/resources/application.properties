# ===========================
# Datasource (por defecto: Postgres local o lo que pases por env)
# ===========================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/fuentes}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:postgre}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# DDL para dev: crea/actualiza automáticamente
spring.jpa.hibernate.ddl-auto=update

# Logs SQL (true/false)
spring.jpa.show-sql=true
# logging.level.org.hibernate.SQL=debug
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

# ===========================
# Actuator / Métricas
# ===========================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Histograma HTTP para latencias por endpoint (útil en Dashboards)
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Tags por defecto (se mandan junto con las métricas)
management.metrics.tags.service=${DD_SERVICE:fuente}
management.metrics.tags.env=${DD_ENV:prod}
management.metrics.tags.version=${DD_VERSION:1.0.0}

# ===========================
# Export Micrometer -> Datadog (sin agente, directo a API)
# ===========================
management.datadog.metrics.export.enabled=true
management.datadog.metrics.export.api-key=${DD_API_KEY}
management.datadog.metrics.export.uri=https://api.${DD_SITE:datadoghq.com}
management.datadog.metrics.export.step=30s

# ===========================
# DevTools
# ===========================
spring.devtools.restart.enabled=true